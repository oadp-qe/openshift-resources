# generated by datamodel-codegen:
#   filename:  k8s_swagger.json
#   timestamp: 2022-10-29T09:10:36+00:00

from __future__ import annotations

from datetime import datetime
from typing import Any, List, Optional

from pydantic import BaseModel, Field

from ...k8s.apimachinery.pkg.apis.meta import v1


class SecretRef(BaseModel):
    apiVersion: Optional[str] = Field(None, description='API version of the referent.')
    fieldPath: Optional[str] = Field(
        None,
        description='If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
    name: Optional[str] = Field(
        None,
        description='Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names',
    )
    namespace: Optional[str] = Field(
        None,
        description='Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/',
    )
    resourceVersion: Optional[str] = Field(
        None,
        description='Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency',
    )
    uid: Optional[str] = Field(
        None,
        description='UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids',
    )


class Spec(BaseModel):
    providerSpec: Optional[Any] = Field(
        None,
        description='ProviderSpec contains the cloud provider specific credentials specification.',
    )
    secretRef: SecretRef = Field(
        ...,
        description='SecretRef points to the secret where the credentials should be stored once generated.',
    )
    serviceAccountNames: Optional[List[str]] = Field(
        None,
        description='ServiceAccountNames contains a list of ServiceAccounts that will use permissions associated with this CredentialsRequest. This is not used by CCO, but the information is needed for being able to properly set up access control in the cloud provider when the ServiceAccounts are used as part of the cloud credentials flow.',
    )


class Condition(BaseModel):
    lastProbeTime: Optional[datetime] = Field(
        None, description='LastProbeTime is the last time we probed the condition'
    )
    lastTransitionTime: Optional[datetime] = Field(
        None,
        description='LastTransitionTime is the last time the condition transitioned from one status to another.',
    )
    message: Optional[str] = Field(
        None,
        description='Message is a human-readable message indicating details about the last transition',
    )
    reason: Optional[str] = Field(
        None,
        description="Reason is a unique, one-word, CamelCase reason for the condition's last transition",
    )
    status: str = Field(..., description='Status is the status of the condition')
    type: str = Field(..., description='Type is the specific type of the condition')


class Status(BaseModel):
    conditions: Optional[List[Condition]] = Field(
        None,
        description='Conditions includes detailed status for the CredentialsRequest',
    )
    lastSyncCloudCredsSecretResourceVersion: Optional[str] = Field(
        None,
        description='LastSyncCloudCredsSecretResourceVersion is the resource version of the cloud credentials secret resource when the credentials request resource was last synced. Used to determine if the the cloud credentials have been updated since the last sync.',
    )
    lastSyncGeneration: int = Field(
        ...,
        description='LastSyncGeneration is the generation of the credentials request resource that was last synced. Used to determine if the object has changed and requires a sync.',
    )
    lastSyncTimestamp: Optional[datetime] = Field(
        None,
        description='LastSyncTimestamp is the time that the credentials were last synced.',
    )
    providerStatus: Optional[Any] = Field(
        None, description='ProviderStatus contains cloud provider specific status.'
    )
    provisioned: bool = Field(
        ...,
        description='Provisioned is true once the credentials have been initially provisioned.',
    )


class CredentialsRequest(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ObjectMeta] = Field(
        None,
        description="Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
    )
    spec: Spec = Field(
        ...,
        description='CredentialsRequestSpec defines the desired state of CredentialsRequest',
    )
    status: Optional[Status] = Field(
        None,
        description='CredentialsRequestStatus defines the observed state of CredentialsRequest',
    )


class CredentialsRequestList(BaseModel):
    apiVersion: Optional[str] = Field(
        None,
        description='APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources',
    )
    items: List[CredentialsRequest] = Field(
        ...,
        description='List of credentialsrequests. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md',
    )
    kind: Optional[str] = Field(
        None,
        description='Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
    metadata: Optional[v1.ListMeta] = Field(
        None,
        description='Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds',
    )
